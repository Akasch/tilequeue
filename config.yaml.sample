queue:
  # type can be `sqs`, `file`, `mem`, or `redis`
  type: mem
  name: <sqs queue/queue file name/redis key>
store:
  type: s3 # Can also be `directory`, which would dump the tiles to disk.
  name: <s3 bucket/tile directory name>
  # The following store properties are s3 specific.
  path: osm
  reduced-redundancy: true
aws:
  credentials:
    aws_access_key_id: <aws_access_key_id>
    aws_secret_access_key: <aws_secret_access_key>
tiles:
  seed:
    all:
      zoom-start: 0
      zoom-until: 10
    metro-extract:
      url: https://raw.githubusercontent.com/mapzen/metroextractor-cities/master/cities.json
      zoom-start: 11
      zoom-until: 15

      # Can be set to an array of metro-extract city names, like
      # 'new-york_new-york', to only seed tiles from those areas rather than
      # all of them.
      cities:
    top-tiles:
      url: https://gist.github.com/brunosan/b7ce3df8b48229a61b5b/raw/37e42e77f253bc204076111c92acc4d5e653edd2/top_50k_tiles.csv
      zoom-start: 11
      zoom-until: 20

    # Specify any number of custom bounding boxes to seed tiles for.
    custom:
      zoom-start: 10
      zoom-until: 10

      # Must be set to an array of bounding boxes in `[left, bottom, right,
      # top]` (or `[min lon, min lat, max lon, max lat]`) format
      bboxes:
    should-add-to-tiles-of-interest: true
  intersect:
    expired-location: <path/to/expired/tiles/list>
    parent-zoom-until: 0
process:
  n-simultaneous-query-sets: 1
  log-queue-sizes: false
  log-queue-sizes-interval-seconds: 1
tilestache:
  config: <path/to/config/file>
  formats: [json, vtm]
logging:
  # logging.conf on this page:
  # https://docs.python.org/2/howto/logging.html#logging-basic-tutorial
  config: logging.conf.sample
redis:
  type: stub
  host: localhost
  port: 6379
  db: 0
  cache-set-key: tilequeue.tiles-of-interest
postgresql:
  host: localhost
  port: 5432
  dbnames: [osm]
  user: osm
  password:

wof:
  # url path to raw neighbourhoods meta file
  neighbourhoods-meta-url: https://github.com/whosonfirst/whosonfirst-data/blob/master/meta/wof-neighbourhood-latest.csv?raw=true
  # url path prefix for wof raw data
  data-prefix-url: http://whosonfirst.mapzen.com/data
  # filesystem path to wof data checkout
  data-path: /tmp/whosonfirst-data
  postgresql:
    host: localhost
    port: 5432
    dbname: osm
    user: osm
    password:
